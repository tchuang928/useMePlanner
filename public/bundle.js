/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar date = new Date();\nvar dateHelper = date;\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\n// determine days in month. month is 1 based, NOT 0\nfunction daysInMonth(year, month) {\n\tvar test = new Date(year, month, 0).getDate();\n\treturn test;\n}\n\n// checking for leap year\nfunction isLeapYear(year) {\n\treturn year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n// console.log(isLeapYear(thisYear + 3));\n\n// month(from array months), year(YYYY), day(0-6), day of week(from array days), date(1-31), milliseconds since 1/1/1970 \nvar thisMonthInt = date.getMonth();\nvar thisMonth = months[thisMonthInt];\nvar thisYear = date.getFullYear();\nvar thisDayInt = date.getDay();\nvar thisDay = days[thisDayInt];\nvar thisDate = date.getDate();\nvar thisTime = date.getTime();\n\n// vanilla javascript\n//document.getElementById('yearMonth').innerHTML = thisYear + '  &#9830  ' + thisMonth + '<br>--------------------------------------------<br>isdlkfj'; \n//document.getElementById('monthNum').innerHTML = date.getMonth() + 1;\n\n// jQuery and template string literals\n$('#yearMonth').html(thisYear + '  &#9830  ' + thisMonth + '<br>--------------------------------------------<br><i>\"Random Quote of the Day\"</i>');\n$('#monthNum').html(date.getMonth() + 1);\n\n// set date for 7 days of the week in weekly view\nfor (var i = 0; i < days.length; i++) {\n\t// set new date object starting Sunday and loop through the week\n\tvar loopDate = thisDate - thisDayInt + i;\n\tdateHelper.setDate(loopDate);\n\t// set date to string\t\t\n\tvar thatDateStr = '' + dateHelper.getDate();\n\t// test if date string is single or double digit. If single digit, add 0 in front \n\tif (/^\\d$/.test(thatDateStr)) {\n\t\t// write in html the date corresponding with day of week\n\t\t$('#' + days[dateHelper.getDay()]).html('0' + dateHelper.getDate());\n\t} else $('#' + days[dateHelper.getDay()]).html(dateHelper.getDate());\n\n\t// if date goes beyond the current month, delete entire row element\n\tvar daysInThisMonth = daysInMonth(thisYear, thisMonthInt + 1);\n\tif (loopDate <= 0 || loopDate > daysInThisMonth) {\n\t\t$('#' + days[dateHelper.getDay()] + '.monthDay').remove();\n\t\t$('#' + days[dateHelper.getDay()] + '.day').remove();\n\t\t$('#day' + i).removeClass('borderDay');\n\t\t$('#day0' + i).removeClass('borderText');\n\t\t$('#checkbox' + i).remove();\n\t}\n\n\t// reset dateHelper object for the next iteration\n\tdateHelper.setTime(thisTime);\n}\n\n// add checklist task when clicking empty area of weekly to-do section \n$('.borderText').on('click', function (section) {\n\tvar checkboxID = $(this).children().closest('div');\n\t// only add checklist task when clicking on the same section\n\tif (section.target === this) {\n\t\tvar checkboxHtml = \"<div class='checkbox'>\" + \"<label>\" + \"<div class='input-group'>\" + \"<input type='checkbox' value=''>\" + '<textarea class=\\'checkboxText\\' placeholder=\\'New Task\\' ></textarea>' + \"<button class='btn checkboxBtn' type='button'>\" + \"<i class='fa fa-times'></i>\" + \"</button>\" + \"</div>\" + \"</label>\" + \"</div>\";\n\t\t// add the html \n\t\t$(checkboxID).append(checkboxHtml);\n\t\t// focus on task item when generated\n\t}\n});\n\n// check if there is localStorage\nfunction supportsLocalStorage() {\n\treturn typeof Storage !== 'undefined';\n}\n\n// delete task when clicking button\n// in the entire document, when a checkboxBtn is clicked, run function on the corresponding text box\n$(document).on('click', '.checkboxBtn', function (section) {\n\tvar checkboxDiv = $(this).closest('div').parent().closest('div');\n\tvar textAreaCheckbox = $(this).parent().children().closest('textarea');\n\tvar localStorageCheckbox = $(textAreaCheckbox).attr('id');\n\t// confirm dialog before deleting task\n\t// sweetalert\n\tswal({\n\t\ttitle: 'Are you sure?',\n\t\ttext: 'This action cannot be undone!',\n\t\ttype: 'warning',\n\t\tconfirmButtonColor: '#DD6B55',\n\t\tshowCancelButton: true,\n\t\tallowOutsideClick: true\n\t}, function () {\n\t\t$(checkboxDiv).remove();\n\t});\n});\n\n// when hovering over button, hightlight the delete icon\n$(document).on({\n\tmouseenter: function mouseenter() {\n\t\tvar faIcon = $(this).children().closest('i');\n\t\t$(faIcon).css('color', '#F53240');\n\t},\n\tmouseleave: function mouseleave() {\n\t\tvar faIcon = $(this).children().closest('i');\n\t\t$(faIcon).css('color', '#EEE');\n\t}\n}, '.checkboxBtn');\n\n// autosave and load journal text\nvar journalText = document.querySelector('.journalText');\n\ntry {\n\t// save journal entry\n\tsetInterval(function () {\n\t\tlocalStorage.setItem('journal', journalText.value);\n\t}, 1000);\n\t// alert if no more memory available\n} catch (e) {\n\tif (e == QUOTA_EXCEEDED_ERR) {\n\t\tswal({\n\t\t\ttitle: 'WARNING',\n\t\t\ttext: 'Memory exceeded. Autosave feature is disabled until local storage is cleared.',\n\t\t\ttype: 'warning',\n\t\t\tallowOutsideClick: true\n\t\t});\n\t}\n}\n\n// load if there is data available\nif (localStorage.getItem('journal')) {\n\tjournalText.value = localStorage.getItem('journal');\n}\n\n// autosave and load checkbox items\n\nvar _loop = function _loop(_i) {\n\ttry {\n\t\t// every 1 second\n\t\tsetInterval(function () {\n\t\t\tvar checkboxes = $('#checkbox' + _i).html();\n\n\t\t\t// add entire checkbox div html into localstorage\n\t\t\tlocalStorage.setItem('checkboxItem' + _i, checkboxes);\n\n\t\t\tvar id = 0;\n\t\t\t$('.checkboxText').each(function () {\n\t\t\t\t// add ids to each textarea of checkbox\n\t\t\t\t$(this).attr('id', 'checkboxText' + id);\n\t\t\t\tvar checkboxTexts = document.querySelector('#checkboxText' + id);\n\t\t\t\t// add user input into DOM using .html\n\t\t\t\t$('#checkboxText' + id).html(checkboxTexts.value);\n\n\t\t\t\t// if checkboxes are checked, then save it to DOM. \n\t\t\t\tif ($(this).parent().children().closest('input').prop('checked')) {\n\t\t\t\t\t$(this).parent().children().closest('input').attr('checked', true);\n\t\t\t\t} else $(this).parent().children().closest('input').attr('checked', false);\n\n\t\t\t\tid++;\n\t\t\t});\n\t\t}, 1000);\n\t\t// alert if no more memory available\n\t} catch (e) {\n\t\tif (e == QUOTA_EXCEEDED_ERR) {\n\t\t\tswal({\n\t\t\t\ttitle: 'WARNING',\n\t\t\t\ttext: 'Memory exceeded. Autosave feature is disabled until local storage is cleared.',\n\t\t\t\ttype: 'warning',\n\t\t\t\tallowOutsideClick: true\n\t\t\t});\n\t\t}\n\t}\n\n\t// load if there is data available\n\tif (localStorage.getItem('checkboxItem' + _i)) {\n\t\t$('#checkbox' + _i).html(localStorage.getItem('checkboxItem' + _i));\n\t}\n};\n\nfor (var _i = 0; _i < 7; _i++) {\n\t_loop(_i);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);